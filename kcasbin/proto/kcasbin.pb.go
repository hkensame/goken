// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: kcasbin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindPoliciesFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pname    string `protobuf:"bytes,1,opt,name=pname,proto3" json:"pname,omitempty"`
	PagesNum string `protobuf:"bytes,2,opt,name=pagesNum,proto3" json:"pagesNum,omitempty"`
	PageSize string `protobuf:"bytes,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *FindPoliciesFilterReq) Reset() {
	*x = FindPoliciesFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPoliciesFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPoliciesFilterReq) ProtoMessage() {}

func (x *FindPoliciesFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPoliciesFilterReq.ProtoReflect.Descriptor instead.
func (*FindPoliciesFilterReq) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{0}
}

func (x *FindPoliciesFilterReq) GetPname() string {
	if x != nil {
		return x.Pname
	}
	return ""
}

func (x *FindPoliciesFilterReq) GetPagesNum() string {
	if x != nil {
		return x.PagesNum
	}
	return ""
}

func (x *FindPoliciesFilterReq) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

type MatchPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mp    []*MatchPolicy `protobuf:"bytes,1,rep,name=mp,proto3" json:"mp,omitempty"`
	Pname string         `protobuf:"bytes,2,opt,name=pname,proto3" json:"pname,omitempty"`
}

func (x *MatchPolicies) Reset() {
	*x = MatchPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPolicies) ProtoMessage() {}

func (x *MatchPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPolicies.ProtoReflect.Descriptor instead.
func (*MatchPolicies) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{1}
}

func (x *MatchPolicies) GetMp() []*MatchPolicy {
	if x != nil {
		return x.Mp
	}
	return nil
}

func (x *MatchPolicies) GetPname() string {
	if x != nil {
		return x.Pname
	}
	return ""
}

type UpdatePoliciesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPolicies *MatchPolicies `protobuf:"bytes,1,opt,name=oldPolicies,proto3" json:"oldPolicies,omitempty"`
	NewPolicies *MatchPolicies `protobuf:"bytes,2,opt,name=newPolicies,proto3" json:"newPolicies,omitempty"`
	Pname       string         `protobuf:"bytes,3,opt,name=pname,proto3" json:"pname,omitempty"`
}

func (x *UpdatePoliciesReq) Reset() {
	*x = UpdatePoliciesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePoliciesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePoliciesReq) ProtoMessage() {}

func (x *UpdatePoliciesReq) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePoliciesReq.ProtoReflect.Descriptor instead.
func (*UpdatePoliciesReq) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatePoliciesReq) GetOldPolicies() *MatchPolicies {
	if x != nil {
		return x.OldPolicies
	}
	return nil
}

func (x *UpdatePoliciesReq) GetNewPolicies() *MatchPolicies {
	if x != nil {
		return x.NewPolicies
	}
	return nil
}

func (x *UpdatePoliciesReq) GetPname() string {
	if x != nil {
		return x.Pname
	}
	return ""
}

// 这里考虑在api中def之外将policy的名字冗余出来,强制将其作为参数
type MatchPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// policy名字
	Pname string `protobuf:"bytes,1,opt,name=pname,proto3" json:"pname,omitempty"`
	Sub   string `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub,omitempty"`
	Dom   string `protobuf:"bytes,3,opt,name=dom,proto3" json:"dom,omitempty"`
	Obj   string `protobuf:"bytes,4,opt,name=obj,proto3" json:"obj,omitempty"`
	// 作为结果表示是否允许通行
	Eft string `protobuf:"bytes,5,opt,name=eft,proto3" json:"eft,omitempty"`
}

func (x *MatchPolicy) Reset() {
	*x = MatchPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchPolicy) ProtoMessage() {}

func (x *MatchPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchPolicy.ProtoReflect.Descriptor instead.
func (*MatchPolicy) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{3}
}

func (x *MatchPolicy) GetPname() string {
	if x != nil {
		return x.Pname
	}
	return ""
}

func (x *MatchPolicy) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *MatchPolicy) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

func (x *MatchPolicy) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *MatchPolicy) GetEft() string {
	if x != nil {
		return x.Eft
	}
	return ""
}

type FindGroupingPoliciesFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gname    string `protobuf:"bytes,1,opt,name=gname,proto3" json:"gname,omitempty"`
	PagesNum string `protobuf:"bytes,2,opt,name=pagesNum,proto3" json:"pagesNum,omitempty"`
	PageSize string `protobuf:"bytes,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *FindGroupingPoliciesFilterReq) Reset() {
	*x = FindGroupingPoliciesFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindGroupingPoliciesFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindGroupingPoliciesFilterReq) ProtoMessage() {}

func (x *FindGroupingPoliciesFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindGroupingPoliciesFilterReq.ProtoReflect.Descriptor instead.
func (*FindGroupingPoliciesFilterReq) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{4}
}

func (x *FindGroupingPoliciesFilterReq) GetGname() string {
	if x != nil {
		return x.Gname
	}
	return ""
}

func (x *FindGroupingPoliciesFilterReq) GetPagesNum() string {
	if x != nil {
		return x.PagesNum
	}
	return ""
}

func (x *FindGroupingPoliciesFilterReq) GetPageSize() string {
	if x != nil {
		return x.PageSize
	}
	return ""
}

type UpdateGroupingPoliciesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldPolicies *GroupingPolicies `protobuf:"bytes,1,opt,name=oldPolicies,proto3" json:"oldPolicies,omitempty"`
	NewPolicies *GroupingPolicies `protobuf:"bytes,2,opt,name=newPolicies,proto3" json:"newPolicies,omitempty"`
	Gname       string            `protobuf:"bytes,3,opt,name=gname,proto3" json:"gname,omitempty"`
}

func (x *UpdateGroupingPoliciesReq) Reset() {
	*x = UpdateGroupingPoliciesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupingPoliciesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupingPoliciesReq) ProtoMessage() {}

func (x *UpdateGroupingPoliciesReq) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupingPoliciesReq.ProtoReflect.Descriptor instead.
func (*UpdateGroupingPoliciesReq) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateGroupingPoliciesReq) GetOldPolicies() *GroupingPolicies {
	if x != nil {
		return x.OldPolicies
	}
	return nil
}

func (x *UpdateGroupingPoliciesReq) GetNewPolicies() *GroupingPolicies {
	if x != nil {
		return x.NewPolicies
	}
	return nil
}

func (x *UpdateGroupingPoliciesReq) GetGname() string {
	if x != nil {
		return x.Gname
	}
	return ""
}

type GroupingPolicies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gp    []*GroupingPolicy `protobuf:"bytes,1,rep,name=gp,proto3" json:"gp,omitempty"`
	Gname string            `protobuf:"bytes,2,opt,name=gname,proto3" json:"gname,omitempty"`
}

func (x *GroupingPolicies) Reset() {
	*x = GroupingPolicies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupingPolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupingPolicies) ProtoMessage() {}

func (x *GroupingPolicies) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupingPolicies.ProtoReflect.Descriptor instead.
func (*GroupingPolicies) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{6}
}

func (x *GroupingPolicies) GetGp() []*GroupingPolicy {
	if x != nil {
		return x.Gp
	}
	return nil
}

func (x *GroupingPolicies) GetGname() string {
	if x != nil {
		return x.Gname
	}
	return ""
}

type GroupingPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gname string `protobuf:"bytes,1,opt,name=gname,proto3" json:"gname,omitempty"`
	Rsub  string `protobuf:"bytes,2,opt,name=rsub,proto3" json:"rsub,omitempty"`
	Psub  string `protobuf:"bytes,3,opt,name=psub,proto3" json:"psub,omitempty"`
	Dom   string `protobuf:"bytes,4,opt,name=dom,proto3" json:"dom,omitempty"`
}

func (x *GroupingPolicy) Reset() {
	*x = GroupingPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupingPolicy) ProtoMessage() {}

func (x *GroupingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupingPolicy.ProtoReflect.Descriptor instead.
func (*GroupingPolicy) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{7}
}

func (x *GroupingPolicy) GetGname() string {
	if x != nil {
		return x.Gname
	}
	return ""
}

func (x *GroupingPolicy) GetRsub() string {
	if x != nil {
		return x.Rsub
	}
	return ""
}

func (x *GroupingPolicy) GetPsub() string {
	if x != nil {
		return x.Psub
	}
	return ""
}

func (x *GroupingPolicy) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

type AuthorizeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sub string `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`
	Obj string `protobuf:"bytes,2,opt,name=obj,proto3" json:"obj,omitempty"`
	Dom string `protobuf:"bytes,3,opt,name=dom,proto3" json:"dom,omitempty"`
}

func (x *AuthorizeReq) Reset() {
	*x = AuthorizeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeReq) ProtoMessage() {}

func (x *AuthorizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeReq.ProtoReflect.Descriptor instead.
func (*AuthorizeReq) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{8}
}

func (x *AuthorizeReq) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *AuthorizeReq) GetObj() string {
	if x != nil {
		return x.Obj
	}
	return ""
}

func (x *AuthorizeReq) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

type AuthorizeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Detail string `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *AuthorizeRes) Reset() {
	*x = AuthorizeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthorizeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeRes) ProtoMessage() {}

func (x *AuthorizeRes) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeRes.ProtoReflect.Descriptor instead.
func (*AuthorizeRes) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{9}
}

func (x *AuthorizeRes) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *AuthorizeRes) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type GetUserRolesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserRolesReq) Reset() {
	*x = GetUserRolesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRolesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesReq) ProtoMessage() {}

func (x *GetUserRolesReq) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesReq.ProtoReflect.Descriptor instead.
func (*GetUserRolesReq) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserRolesReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type GetUserRolesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []string `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetUserRolesRes) Reset() {
	*x = GetUserRolesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRolesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesRes) ProtoMessage() {}

func (x *GetUserRolesRes) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesRes.ProtoReflect.Descriptor instead.
func (*GetUserRolesRes) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserRolesRes) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GetRoleUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleUsersReq) Reset() {
	*x = GetRoleUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleUsersReq) ProtoMessage() {}

func (x *GetRoleUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleUsersReq.ProtoReflect.Descriptor instead.
func (*GetRoleUsersReq) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoleUsersReq) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type GetRoleUsersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []string `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetRoleUsersRes) Reset() {
	*x = GetRoleUsersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kcasbin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleUsersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleUsersRes) ProtoMessage() {}

func (x *GetRoleUsersRes) ProtoReflect() protoreflect.Message {
	mi := &file_kcasbin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleUsersRes.ProtoReflect.Descriptor instead.
func (*GetRoleUsersRes) Descriptor() ([]byte, []int) {
	return file_kcasbin_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoleUsersRes) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_kcasbin_proto protoreflect.FileDescriptor

var file_kcasbin_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4b, 0x0a, 0x0d,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x02, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x63, 0x61, 0x73,
	0x62, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x02, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x38, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x6c,
	0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x0b, 0x6e, 0x65, 0x77,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x0b, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x62, 0x6a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6f, 0x62, 0x6a, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x66, 0x74, 0x22, 0x6d, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x3b, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x67, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x02, 0x67, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x73,
	0x75, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x73, 0x75, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x73, 0x75, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x6d, 0x22, 0x44, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x62,
	0x6a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x62, 0x6a, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x6d, 0x22, 0x36,
	0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x27, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x27, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x32, 0xb3, 0x06, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69,
	0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x6b, 0x63, 0x61, 0x73,
	0x62, 0x69, 0x6e, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x6b, 0x63,
	0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4b, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x19, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x22, 0x2e,
	0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x19, 0x46, 0x69, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x15, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x6b, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kcasbin_proto_rawDescOnce sync.Once
	file_kcasbin_proto_rawDescData = file_kcasbin_proto_rawDesc
)

func file_kcasbin_proto_rawDescGZIP() []byte {
	file_kcasbin_proto_rawDescOnce.Do(func() {
		file_kcasbin_proto_rawDescData = protoimpl.X.CompressGZIP(file_kcasbin_proto_rawDescData)
	})
	return file_kcasbin_proto_rawDescData
}

var file_kcasbin_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_kcasbin_proto_goTypes = []interface{}{
	(*FindPoliciesFilterReq)(nil),         // 0: kcasbin.FindPoliciesFilterReq
	(*MatchPolicies)(nil),                 // 1: kcasbin.MatchPolicies
	(*UpdatePoliciesReq)(nil),             // 2: kcasbin.UpdatePoliciesReq
	(*MatchPolicy)(nil),                   // 3: kcasbin.MatchPolicy
	(*FindGroupingPoliciesFilterReq)(nil), // 4: kcasbin.FindGroupingPoliciesFilterReq
	(*UpdateGroupingPoliciesReq)(nil),     // 5: kcasbin.UpdateGroupingPoliciesReq
	(*GroupingPolicies)(nil),              // 6: kcasbin.GroupingPolicies
	(*GroupingPolicy)(nil),                // 7: kcasbin.GroupingPolicy
	(*AuthorizeReq)(nil),                  // 8: kcasbin.AuthorizeReq
	(*AuthorizeRes)(nil),                  // 9: kcasbin.AuthorizeRes
	(*GetUserRolesReq)(nil),               // 10: kcasbin.GetUserRolesReq
	(*GetUserRolesRes)(nil),               // 11: kcasbin.GetUserRolesRes
	(*GetRoleUsersReq)(nil),               // 12: kcasbin.GetRoleUsersReq
	(*GetRoleUsersRes)(nil),               // 13: kcasbin.GetRoleUsersRes
	(*emptypb.Empty)(nil),                 // 14: google.protobuf.Empty
}
var file_kcasbin_proto_depIdxs = []int32{
	3,  // 0: kcasbin.MatchPolicies.mp:type_name -> kcasbin.MatchPolicy
	1,  // 1: kcasbin.UpdatePoliciesReq.oldPolicies:type_name -> kcasbin.MatchPolicies
	1,  // 2: kcasbin.UpdatePoliciesReq.newPolicies:type_name -> kcasbin.MatchPolicies
	6,  // 3: kcasbin.UpdateGroupingPoliciesReq.oldPolicies:type_name -> kcasbin.GroupingPolicies
	6,  // 4: kcasbin.UpdateGroupingPoliciesReq.newPolicies:type_name -> kcasbin.GroupingPolicies
	7,  // 5: kcasbin.GroupingPolicies.gp:type_name -> kcasbin.GroupingPolicy
	1,  // 6: kcasbin.Authorization.AddPolicies:input_type -> kcasbin.MatchPolicies
	1,  // 7: kcasbin.Authorization.RemovePolicies:input_type -> kcasbin.MatchPolicies
	2,  // 8: kcasbin.Authorization.UpdatePolicies:input_type -> kcasbin.UpdatePoliciesReq
	0,  // 9: kcasbin.Authorization.FindPoliciesItems:input_type -> kcasbin.FindPoliciesFilterReq
	6,  // 10: kcasbin.Authorization.AddGroupingPolicies:input_type -> kcasbin.GroupingPolicies
	6,  // 11: kcasbin.Authorization.RemoveGroupingPolicies:input_type -> kcasbin.GroupingPolicies
	5,  // 12: kcasbin.Authorization.UpdateGroupingPolicies:input_type -> kcasbin.UpdateGroupingPoliciesReq
	4,  // 13: kcasbin.Authorization.FindGroupingPoliciesItems:input_type -> kcasbin.FindGroupingPoliciesFilterReq
	8,  // 14: kcasbin.Authorization.Authorize:input_type -> kcasbin.AuthorizeReq
	10, // 15: kcasbin.Authorization.GetUserRoles:input_type -> kcasbin.GetUserRolesReq
	12, // 16: kcasbin.Authorization.GetRoleUsers:input_type -> kcasbin.GetRoleUsersReq
	14, // 17: kcasbin.Authorization.AddPolicies:output_type -> google.protobuf.Empty
	14, // 18: kcasbin.Authorization.RemovePolicies:output_type -> google.protobuf.Empty
	14, // 19: kcasbin.Authorization.UpdatePolicies:output_type -> google.protobuf.Empty
	1,  // 20: kcasbin.Authorization.FindPoliciesItems:output_type -> kcasbin.MatchPolicies
	14, // 21: kcasbin.Authorization.AddGroupingPolicies:output_type -> google.protobuf.Empty
	14, // 22: kcasbin.Authorization.RemoveGroupingPolicies:output_type -> google.protobuf.Empty
	14, // 23: kcasbin.Authorization.UpdateGroupingPolicies:output_type -> google.protobuf.Empty
	6,  // 24: kcasbin.Authorization.FindGroupingPoliciesItems:output_type -> kcasbin.GroupingPolicies
	9,  // 25: kcasbin.Authorization.Authorize:output_type -> kcasbin.AuthorizeRes
	11, // 26: kcasbin.Authorization.GetUserRoles:output_type -> kcasbin.GetUserRolesRes
	13, // 27: kcasbin.Authorization.GetRoleUsers:output_type -> kcasbin.GetRoleUsersRes
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_kcasbin_proto_init() }
func file_kcasbin_proto_init() {
	if File_kcasbin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kcasbin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPoliciesFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePoliciesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindGroupingPoliciesFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupingPoliciesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupingPolicies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupingPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthorizeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRolesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRolesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kcasbin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoleUsersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kcasbin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kcasbin_proto_goTypes,
		DependencyIndexes: file_kcasbin_proto_depIdxs,
		MessageInfos:      file_kcasbin_proto_msgTypes,
	}.Build()
	File_kcasbin_proto = out.File
	file_kcasbin_proto_rawDesc = nil
	file_kcasbin_proto_goTypes = nil
	file_kcasbin_proto_depIdxs = nil
}
